import groovy.transform.Field

def STACK_NAME = ""
def TEMPLATE_NAME = ""

pipeline {
    agent any
    
    parameters {
        choice(name: 'REFRESH',choices: ['no','yes'],description: 'Please select refresh parameters as Yes if you want to refresh the parameters.')
        choice(name: 'ENVIRONMENT',choices: ['','dev','test'],description: 'Select Stack Environment')
        choice(name: 'RESOURCE',choices: [' ','sqs','s3'],description: 'AWS Account Region')
        choice(name: 'REGION',choices: [' ','us-east-1','us-east-2'],description: 'AWS Account Region')
        choice(name: 'ACTION',choices: ['deploy-stack', 'delete-stack'],description: 'CloudFormation Actions')
        booleanParam(name: 'TOGGLE', defaultValue: false, description: 'Are you sure you want to perform this action?')
    }
  
  stages {
     stage('Refresh Parameters') {
        steps {
            sh 'git version'
        }
     }
     
     
     stage('action') {
       when {
         expression { params.ACTION == 'deploy-stack' || params.ACTION == 'delete-stack'}
       }
       steps {
         ansiColor('xterm') {
           script {
             if (!params.TOGGLE) {
                 currentBuild.result = 'ABORTED' //If you do not set the toggle flag to true before executing the build action, it will automatically abort the pipeline for any action.
             } 
          }
        }
      }
    }
    
     stage('stack-execution') {
      when {
        expression { params.ACTION == 'deploy-stack' && params.RESOURCE == 'sqs'}
      }
      
      steps {
        ansiColor('xterm') {
            withAWS(credentials: 'aws-credentials', region: 'us-east-1') {
                script {
                    sh "chmod +x -R ${env.WORKSPACE}"
                    datas = readYaml (file: "config/config-${ENVIRONMENT}.yml")
                    STACK_NAME = datas[params.ENVIRONMENT][params.REGION].SQSStackName
                    TEMPLATE_NAME = datas[params.ENVIRONMENT][params.REGION].SQSTemplateFile
                    sh "echo ${STACK_NAME}"
             }
          }
        }
      }
    }
  }
}
